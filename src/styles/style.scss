@import "_reset.scss";
@import "mixin";

// 위에 변수를 선언해두고 사용하면 유지보수 할 때 아주 좋음!
$boxShadow: 2px 2px 6px rgba(58, 58, 58, 0.443);
$blueBtn: #2857ff;

// CSS 문법과 동일!!
// .div1 {
// }
// .div1 .div2 {
// }
// .div1 .div2 .div3 {
// }

.div1 {
  width: 100%;
  height: 50vh;
  background-color: red;
  .div2 {
    width: 80%;
    height: 50%;
    background-color: orange;
    box-shadow: inset $boxShadow; //가로 세로 퍼진정도
    .div3 {
      width: 80%;
      height: 50%;
      box-shadow: $boxShadow;
      background-color: yellow;
    }
  }

  .btn {
    width: 180px;
    height: 70px;
    border-radius: 15px;
    box-shadow: $boxShadow;
    line-height: 70px;
    color: #fff;
    text-align: center;
    font-size: 23px;
    letter-spacing: 3px;

    // .btn.orangered 이와 동일
    &.orangered {
      background-color: orangered;
    }

    //btn--opacity와 동일
    &--opacity {
      background-color: $blueBtn;
      opacity: 0.5;
    }

    &--blue {
      background-color: $blueBtn;
    }

    &:hover {
      font-weight: 700;
      color: black;
      transition: all 0.5s linear;
    }
  }
}

.container {
  .box1 {
    @include square1;
    background-color: #2323cb;

    // &:nth-child(1) {
    //   background-color: red;
    //   width: 100px;
    // }
    // &:nth-child(2) {
    //   background-color: orange;
    //   width: 120px;
    // }
    // &:nth-child(3) {
    //   background-color: yellow;
    //   width: 140px;
    // }

    //to는 해당 숫자 전까지만 돈다!
    @for $i from 1 to 4 {
      &:nth-child(#{$i}) {
        width: (80px + 20px * $i);
      }
    }
  }
  .circle {
    // circle mixin 에는 default값 설정되어 있지 않기 때문에
    // default값 전달하지 않으면 오류 발생
    // @include circle()

    @include circle($circleColor: blue, $circleOpacity: 0.8);
    // @include circle( blue, 0.8);

    $circleBgColors: (blue, dodgerblue, rgb(82, 169, 255));

    @each $el in $circleBgColors {
      //인덱스에 바로 접근할 수 없어 SCSS의 기본 내장 함수인 index()메소드를 이용!!
      // 1. 변수 인덱스 선언
      // 2. index($circleBgColors => 배열, $el => 요소)
      // index(array, array의 value) array의 value에 대한 index 반환
      // $index는 블루일 때 0, 닷져블루일 때 1, 3번째 블루일 때 2를 갖게 됨
      $index: index($circleBgColors, $el);

      &:nth-of-type(#{$index}) {
        @include circle($circleColor: $el, $circleOpacity: 1 - 0.2 * $index);
      }
    }
  }
  .box2 {
    // @include square2() > default값 정해져 있어서 오류나지 않음
    // @include square2(
    //   $squareBgColor: yellow,
    //   $squareFontSize: 20px,
    //   $squareFontColor: blue
    // );

    @include square2(black, 16px, #fff);

    &:nth-of-type(4) {
      @include square2(yellow, 20px, navy);
    }
    &:nth-of-type(5) {
      @include square2(orangered, 30px, black);
    }
  }
}

.img-test {
  width: 100px;
  height: 100px;
  border: 1px solid blue;

  &.src-img {
    background-image: url("../assets/img1.png");
  }

  &.public-img {
    background-image: url("/assets/img1.png");
  }
}

h1 {
  margin: 20px 0;
  text-align: center;
}

.practice {
  text-align: center;
  padding: 30px 0;
  display: flex;
  justify-content: space-evenly;
  margin-bottom: 20px;

  div {
    width: 200px;
    height: 300px;
    background-color: #7f8ff5;
    border-radius: 15px;
    box-shadow: $boxShadow;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;

    @for $i from 1 through 4 {
      &:nth-child(#{$i}) {
        background-image: url("../assets/img#{$i}.png");
      }
    }
  }
}

@import "_useScss1";
